import { e as createComponent, r as renderTemplate, k as renderComponent, m as maybeRenderHead, h as addAttribute } from '../../chunks/astro/server_Bi__Z7-M.mjs';
import 'kleur/colors';
import { $ as $$AdminLayout, a as $$PageHeader } from '../../chunks/PageHeader_Brl_MUMp.mjs';
import { a as $$Modal, $ as $$FormField } from '../../chunks/FormField_BixoaIOJ.mjs';
import { f as fetchFasePiezas } from '../../chunks/fase_piezas_api_BMSUIlot.mjs';
import { f as fetchFaseConjuntos } from '../../chunks/fase_conjuntos_api_CA1fKWH4.mjs';
/* empty css                                            */
export { renderers } from '../../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Configuracion = createComponent(async ($$result, $$props, $$slots) => {
  const fasesPiezas = await fetchFasePiezas();
  const fasesConjuntos = await fetchFaseConjuntos();
  return renderTemplate(_a || (_a = __template(["", "  <script type=\"module\">\n  // Variables globales para manejar los modales\n  window.currentEditId = null;\n\n  // Funciones para Fases de Piezas\n  window.editFasePieza = function(id, fase) {\n    window.currentEditId = id;\n    document.getElementById('edit-fase-pieza-id').value = id;\n    document.querySelector('#form-editar-fase-pieza input[name=\"fase\"]').value = fase;\n    openModal('modal-editar-fase-pieza');\n  };\n\n  window.deleteFasePieza = function(id, fase) {\n    if (confirm(`\xBFEst\xE1s seguro de que quieres eliminar la fase \"${fase}\"?`)) {\n      fetch(`/api/fase_piezas/${id}`, {\n        method: 'DELETE'\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al eliminar la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al eliminar la fase');\n      });\n    }\n  };\n\n  // Funciones para Fases de Conjuntos\n  window.editFaseConjunto = function(id, fase) {\n    window.currentEditId = id;\n    document.getElementById('edit-fase-conjunto-id').value = id;\n    document.querySelector('#form-editar-fase-conjunto input[name=\"fase\"]').value = fase;\n    openModal('modal-editar-fase-conjunto');\n  };\n\n  window.deleteFaseConjunto = function(id, fase) {\n    if (confirm(`\xBFEst\xE1s seguro de que quieres eliminar la fase \"${fase}\"?`)) {\n      fetch(`/api/fase_conjuntos/${id}`, {\n        method: 'DELETE'\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al eliminar la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al eliminar la fase');\n      });\n    }\n  };\n\n  // Formularios\n  document.addEventListener('DOMContentLoaded', function() {\n    // Formulario para nueva fase de pieza\n    document.getElementById('form-nueva-fase-pieza').addEventListener('submit', function(e) {\n      e.preventDefault();\n      \n      const formData = new FormData(this);\n      \n      fetch('/api/fase_piezas/create', {\n        method: 'POST',\n        body: formData\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al crear la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al crear la fase');\n      });\n    });\n\n    // Formulario para editar fase de pieza\n    document.getElementById('form-editar-fase-pieza').addEventListener('submit', function(e) {\n      e.preventDefault();\n      \n      const formData = new FormData(this);\n      const id = document.getElementById('edit-fase-pieza-id').value;\n      \n      fetch(`/api/fase_piezas/${id}`, {\n        method: 'PUT',\n        body: formData\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al actualizar la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al actualizar la fase');\n      });\n    });\n\n    // Formulario para nueva fase de conjunto\n    document.getElementById('form-nueva-fase-conjunto').addEventListener('submit', function(e) {\n      e.preventDefault();\n      \n      const formData = new FormData(this);\n      \n      fetch('/api/fase_conjuntos/create', {\n        method: 'POST',\n        body: formData\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al crear la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al crear la fase');\n      });\n    });\n\n    // Formulario para editar fase de conjunto\n    document.getElementById('form-editar-fase-conjunto').addEventListener('submit', function(e) {\n      e.preventDefault();\n      \n      const formData = new FormData(this);\n      const id = document.getElementById('edit-fase-conjunto-id').value;\n      \n      fetch(`/api/fase_conjuntos/${id}`, {\n        method: 'PUT',\n        body: formData\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al actualizar la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al actualizar la fase');\n      });\n    });\n  });\n<\/script>"], ["", "  <script type=\"module\">\n  // Variables globales para manejar los modales\n  window.currentEditId = null;\n\n  // Funciones para Fases de Piezas\n  window.editFasePieza = function(id, fase) {\n    window.currentEditId = id;\n    document.getElementById('edit-fase-pieza-id').value = id;\n    document.querySelector('#form-editar-fase-pieza input[name=\"fase\"]').value = fase;\n    openModal('modal-editar-fase-pieza');\n  };\n\n  window.deleteFasePieza = function(id, fase) {\n    if (confirm(\\`\xBFEst\xE1s seguro de que quieres eliminar la fase \"\\${fase}\"?\\`)) {\n      fetch(\\`/api/fase_piezas/\\${id}\\`, {\n        method: 'DELETE'\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al eliminar la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al eliminar la fase');\n      });\n    }\n  };\n\n  // Funciones para Fases de Conjuntos\n  window.editFaseConjunto = function(id, fase) {\n    window.currentEditId = id;\n    document.getElementById('edit-fase-conjunto-id').value = id;\n    document.querySelector('#form-editar-fase-conjunto input[name=\"fase\"]').value = fase;\n    openModal('modal-editar-fase-conjunto');\n  };\n\n  window.deleteFaseConjunto = function(id, fase) {\n    if (confirm(\\`\xBFEst\xE1s seguro de que quieres eliminar la fase \"\\${fase}\"?\\`)) {\n      fetch(\\`/api/fase_conjuntos/\\${id}\\`, {\n        method: 'DELETE'\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al eliminar la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al eliminar la fase');\n      });\n    }\n  };\n\n  // Formularios\n  document.addEventListener('DOMContentLoaded', function() {\n    // Formulario para nueva fase de pieza\n    document.getElementById('form-nueva-fase-pieza').addEventListener('submit', function(e) {\n      e.preventDefault();\n      \n      const formData = new FormData(this);\n      \n      fetch('/api/fase_piezas/create', {\n        method: 'POST',\n        body: formData\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al crear la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al crear la fase');\n      });\n    });\n\n    // Formulario para editar fase de pieza\n    document.getElementById('form-editar-fase-pieza').addEventListener('submit', function(e) {\n      e.preventDefault();\n      \n      const formData = new FormData(this);\n      const id = document.getElementById('edit-fase-pieza-id').value;\n      \n      fetch(\\`/api/fase_piezas/\\${id}\\`, {\n        method: 'PUT',\n        body: formData\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al actualizar la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al actualizar la fase');\n      });\n    });\n\n    // Formulario para nueva fase de conjunto\n    document.getElementById('form-nueva-fase-conjunto').addEventListener('submit', function(e) {\n      e.preventDefault();\n      \n      const formData = new FormData(this);\n      \n      fetch('/api/fase_conjuntos/create', {\n        method: 'POST',\n        body: formData\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al crear la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al crear la fase');\n      });\n    });\n\n    // Formulario para editar fase de conjunto\n    document.getElementById('form-editar-fase-conjunto').addEventListener('submit', function(e) {\n      e.preventDefault();\n      \n      const formData = new FormData(this);\n      const id = document.getElementById('edit-fase-conjunto-id').value;\n      \n      fetch(\\`/api/fase_conjuntos/\\${id}\\`, {\n        method: 'PUT',\n        body: formData\n      })\n      .then(response => response.json())\n      .then(result => {\n        if (result.success) {\n          location.reload();\n        } else {\n          alert('Error al actualizar la fase: ' + result.error);\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n        alert('Error al actualizar la fase');\n      });\n    });\n  });\n<\/script>"])), renderComponent($$result, "AdminLayout", $$AdminLayout, { "title": "Configuraci\xF3n", "activeSection": "configuracion", "data-astro-cid-6kdlctd2": true }, { "default": async ($$result2) => renderTemplate` ${renderComponent($$result2, "PageHeader", $$PageHeader, { "title": "Configuraci\xF3n del Sistema", "subtitle": "Gesti\xF3n de fases de piezas y conjuntos", "data-astro-cid-6kdlctd2": true })} ${maybeRenderHead()}<div class="configuracion-content" data-astro-cid-6kdlctd2> <!-- Sección de Fases de Piezas --> <div class="config-section" data-astro-cid-6kdlctd2> <div class="section-header" data-astro-cid-6kdlctd2> <h3 data-astro-cid-6kdlctd2>Fases de Piezas (${fasesPiezas.length})</h3> <button class="btn-primary" onclick="openModal('modal-nueva-fase-pieza')" data-astro-cid-6kdlctd2> <svg width="16" height="16" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-6kdlctd2> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" data-astro-cid-6kdlctd2></path> </svg>
Nueva Fase
</button> </div> <div class="table-container" data-astro-cid-6kdlctd2> <table class="data-table" data-astro-cid-6kdlctd2> <thead data-astro-cid-6kdlctd2> <tr data-astro-cid-6kdlctd2> <th data-astro-cid-6kdlctd2>ID</th> <th data-astro-cid-6kdlctd2>Fase</th> <th data-astro-cid-6kdlctd2>Fecha Creación</th> <th data-astro-cid-6kdlctd2>Acciones</th> </tr> </thead> <tbody data-astro-cid-6kdlctd2> ${fasesPiezas.map((fase) => renderTemplate`<tr data-astro-cid-6kdlctd2> <td data-astro-cid-6kdlctd2>${fase.id}</td> <td data-astro-cid-6kdlctd2>${fase.fase}</td> <td data-astro-cid-6kdlctd2>${new Date(fase.created_at).toLocaleDateString("es-ES")}</td> <td data-astro-cid-6kdlctd2> <div class="action-buttons" data-astro-cid-6kdlctd2> <button class="btn-icon" title="Editar"${addAttribute(`editFasePieza(${fase.id}, '${fase.fase}')`, "onclick")} data-astro-cid-6kdlctd2> <svg width="16" height="16" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-6kdlctd2> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" data-astro-cid-6kdlctd2></path> </svg> </button> <button class="btn-icon danger" title="Eliminar"${addAttribute(`deleteFasePieza(${fase.id}, '${fase.fase}')`, "onclick")} data-astro-cid-6kdlctd2> <svg width="16" height="16" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-6kdlctd2> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" data-astro-cid-6kdlctd2></path> </svg> </button> </div> </td> </tr>`)} </tbody> </table> </div> </div> <!-- Sección de Fases de Conjuntos --> <div class="config-section" data-astro-cid-6kdlctd2> <div class="section-header" data-astro-cid-6kdlctd2> <h3 data-astro-cid-6kdlctd2>Fases de Conjuntos (${fasesConjuntos.length})</h3> <button class="btn-primary" onclick="openModal('modal-nueva-fase-conjunto')" data-astro-cid-6kdlctd2> <svg width="16" height="16" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-6kdlctd2> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" data-astro-cid-6kdlctd2></path> </svg>
Nueva Fase
</button> </div> <div class="table-container" data-astro-cid-6kdlctd2> <table class="data-table" data-astro-cid-6kdlctd2> <thead data-astro-cid-6kdlctd2> <tr data-astro-cid-6kdlctd2> <th data-astro-cid-6kdlctd2>ID</th> <th data-astro-cid-6kdlctd2>Fase</th> <th data-astro-cid-6kdlctd2>Fecha Creación</th> <th data-astro-cid-6kdlctd2>Acciones</th> </tr> </thead> <tbody data-astro-cid-6kdlctd2> ${fasesConjuntos.length === 0 ? renderTemplate`<tr data-astro-cid-6kdlctd2> <td colspan="4" style="text-align: center; color: #6b7280; padding: 20px;" data-astro-cid-6kdlctd2>
No hay fases de conjuntos configuradas
</td> </tr>` : fasesConjuntos.map((fase) => renderTemplate`<tr data-astro-cid-6kdlctd2> <td data-astro-cid-6kdlctd2>${fase.id}</td> <td data-astro-cid-6kdlctd2>${fase.fase}</td> <td data-astro-cid-6kdlctd2>${new Date(fase.created_at).toLocaleDateString("es-ES")}</td> <td data-astro-cid-6kdlctd2> <div class="action-buttons" data-astro-cid-6kdlctd2> <button class="btn-icon" title="Editar"${addAttribute(`editFaseConjunto(${fase.id}, '${fase.fase}')`, "onclick")} data-astro-cid-6kdlctd2> <svg width="16" height="16" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-6kdlctd2> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" data-astro-cid-6kdlctd2></path> </svg> </button> <button class="btn-icon danger" title="Eliminar"${addAttribute(`deleteFaseConjunto(${fase.id}, '${fase.fase}')`, "onclick")} data-astro-cid-6kdlctd2> <svg width="16" height="16" fill="none" viewBox="0 0 24 24" stroke="currentColor" data-astro-cid-6kdlctd2> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" data-astro-cid-6kdlctd2></path> </svg> </button> </div> </td> </tr>`)} </tbody> </table> </div> </div> </div>  ${renderComponent($$result2, "Modal", $$Modal, { "id": "modal-nueva-fase-pieza", "title": "Nueva Fase de Pieza", "size": "md", "data-astro-cid-6kdlctd2": true }, { "default": async ($$result3) => renderTemplate` <form id="form-nueva-fase-pieza" class="form" data-astro-cid-6kdlctd2> ${renderComponent($$result3, "FormField", $$FormField, { "label": "Nombre de la Fase", "name": "fase", "type": "text", "placeholder": "Ej: Corte, Biselado, Montaje...", "required": true, "data-astro-cid-6kdlctd2": true })} <div class="form-actions" data-astro-cid-6kdlctd2> <button type="button" class="btn-cancel" data-close-modal="modal-nueva-fase-pieza" data-astro-cid-6kdlctd2>
Cancelar
</button> <button type="submit" class="btn-submit" data-astro-cid-6kdlctd2>
Crear Fase
</button> </div> </form> ` })}  ${renderComponent($$result2, "Modal", $$Modal, { "id": "modal-editar-fase-pieza", "title": "Editar Fase de Pieza", "size": "md", "data-astro-cid-6kdlctd2": true }, { "default": async ($$result3) => renderTemplate` <form id="form-editar-fase-pieza" class="form" data-astro-cid-6kdlctd2> <input type="hidden" id="edit-fase-pieza-id" name="id" data-astro-cid-6kdlctd2> ${renderComponent($$result3, "FormField", $$FormField, { "label": "Nombre de la Fase", "name": "fase", "type": "text", "placeholder": "Ej: Corte, Biselado, Montaje...", "required": true, "data-astro-cid-6kdlctd2": true })} <div class="form-actions" data-astro-cid-6kdlctd2> <button type="button" class="btn-cancel" data-close-modal="modal-editar-fase-pieza" data-astro-cid-6kdlctd2>
Cancelar
</button> <button type="submit" class="btn-submit" data-astro-cid-6kdlctd2>
Actualizar Fase
</button> </div> </form> ` })}  ${renderComponent($$result2, "Modal", $$Modal, { "id": "modal-nueva-fase-conjunto", "title": "Nueva Fase de Conjunto", "size": "md", "data-astro-cid-6kdlctd2": true }, { "default": async ($$result3) => renderTemplate` <form id="form-nueva-fase-conjunto" class="form" data-astro-cid-6kdlctd2> ${renderComponent($$result3, "FormField", $$FormField, { "label": "Nombre de la Fase", "name": "fase", "type": "text", "placeholder": "Ej: Dise\xF1o, Fabricaci\xF3n, Montaje...", "required": true, "data-astro-cid-6kdlctd2": true })} <div class="form-actions" data-astro-cid-6kdlctd2> <button type="button" class="btn-cancel" data-close-modal="modal-nueva-fase-conjunto" data-astro-cid-6kdlctd2>
Cancelar
</button> <button type="submit" class="btn-submit" data-astro-cid-6kdlctd2>
Crear Fase
</button> </div> </form> ` })}  ${renderComponent($$result2, "Modal", $$Modal, { "id": "modal-editar-fase-conjunto", "title": "Editar Fase de Conjunto", "size": "md", "data-astro-cid-6kdlctd2": true }, { "default": async ($$result3) => renderTemplate` <form id="form-editar-fase-conjunto" class="form" data-astro-cid-6kdlctd2> <input type="hidden" id="edit-fase-conjunto-id" name="id" data-astro-cid-6kdlctd2> ${renderComponent($$result3, "FormField", $$FormField, { "label": "Nombre de la Fase", "name": "fase", "type": "text", "placeholder": "Ej: Dise\xF1o, Fabricaci\xF3n, Montaje...", "required": true, "data-astro-cid-6kdlctd2": true })} <div class="form-actions" data-astro-cid-6kdlctd2> <button type="button" class="btn-cancel" data-close-modal="modal-editar-fase-conjunto" data-astro-cid-6kdlctd2>
Cancelar
</button> <button type="submit" class="btn-submit" data-astro-cid-6kdlctd2>
Actualizar Fase
</button> </div> </form> ` })} ` }));
}, "/Applications/XAMPP/xamppfiles/htdocs/AdminMontaje/src/pages/admin/configuracion.astro", void 0);

const $$file = "/Applications/XAMPP/xamppfiles/htdocs/AdminMontaje/src/pages/admin/configuracion.astro";
const $$url = "/admin/configuracion";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Configuracion,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
