---
import PageHeader from '../PageHeader.astro';
import Modal from '../Modal.astro';
import ConjuntosForm from '../forms/ConjuntosForm.astro';
import DetailModal from '../DetailModal.astro';
import TableConjunto from '../table/TableConjunto.astro';
import ConjuntoDetail from '../detail/ConjuntoDetail.astro';
import { fetchConjuntos } from '../../lib/conjunto_api';

const conjuntos = await fetchConjuntos();

// Calcular estadísticas dinámicas
const totalConjuntos = conjuntos.length;
const conjuntosCompletados = conjuntos.filter(c => c.is_completed).length;
const conjuntosEnProgreso = conjuntos.filter(c => !c.is_completed).length;
const obrasPorConjunto = [...new Set(conjuntos.map(c => c.obra_id).filter(Boolean))].length;
---

<PageHeader 
  title="Gestión de Conjuntos" 
  subtitle="Administra los conjuntos de elementos y componentes estructurales"
  actionButton={{ text: "Nuevo Conjunto", onClick: "openModal('modal-nuevo-conjunto')" }}
/>

<div class="conjuntos-section">
  <div class="stats-grid">
    <div class="stat-card">
      <div class="stat-icon conjuntos">
        <svg width="24" height="24" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-number">{totalConjuntos}</div>
        <div class="stat-label">Total Conjuntos</div>
      </div>
    </div>
    
    <div class="stat-card">
      <div class="stat-icon production">
        <svg width="24" height="24" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-number">{conjuntosEnProgreso}</div>
        <div class="stat-label">En Progreso</div>
      </div>
    </div>
    
    <div class="stat-card">
      <div class="stat-icon completed">
        <svg width="24" height="24" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-number">{conjuntosCompletados}</div>
        <div class="stat-label">Completados</div>
      </div>
    </div>
    
    <div class="stat-card">
      <div class="stat-icon efficiency">
        <svg width="24" height="24" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-number">{obrasPorConjunto}</div>
        <div class="stat-label">Obras Activas</div>
      </div>
    </div>
  </div>

  <div class="conjuntos-table">
    <div class="table-header">
      <h3>Conjuntos Registrados</h3>
      <div class="table-filters">
        <select class="filter-select" id="estado-filter">
          <option value="">Todos los estados</option>
          <option value="true">Completados</option>
          <option value="false">En progreso</option>
        </select>
        <input 
          type="text" 
          class="filter-input" 
          id="search-input"
          placeholder="Buscar por código o descripción..."
        />
      </div>
    </div>
    
    <TableConjunto conjuntos={conjuntos} />
  </div>
</div>

<!-- Modal para Nuevo Conjunto -->
<Modal id="modal-nuevo-conjunto" title="Nuevo Conjunto" size="lg">
  <ConjuntosForm />
</Modal>

<!-- Modales de Detalles dinámicos -->
{conjuntos.map((conjunto) => (
  <DetailModal id={`detail-conjunto-${conjunto.id}`} title={`Conjunto ${conjunto.codigo}`} type="conjunto">
    <ConjuntoDetail conjunto={conjunto} />
  </DetailModal>
))}

<style>
  .conjuntos-section {
    space-y: 32px;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 24px;
    margin-bottom: 32px;
  }

  .stat-card {
    background: white;
    padding: 24px;
    border-radius: 12px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid #e5e7eb;
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .stat-icon {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
  }

  .stat-icon.conjuntos { background: linear-gradient(135deg, #8b5cf6, #7c3aed); }
  .stat-icon.production { background: linear-gradient(135deg, #f59e0b, #d97706); }
  .stat-icon.completed { background: linear-gradient(135deg, #10b981, #059669); }
  .stat-icon.efficiency { background: linear-gradient(135deg, #06b6d4, #0891b2); }

  .stat-content {
    flex: 1;
  }

  .stat-number {
    font-size: 24px;
    font-weight: 700;
    color: #111827;
    line-height: 1;
    margin-bottom: 4px;
  }

  .stat-label {
    font-size: 14px;
    color: #6b7280;
    font-weight: 500;
  }

  .conjuntos-table {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid #e5e7eb;
  }

  .table-header {
    padding: 24px;
    border-bottom: 1px solid #e5e7eb;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 16px;
  }

  .table-header h3 {
    font-size: 18px;
    font-weight: 600;
    color: #111827;
    margin: 0;
  }

  .table-filters {
    display: flex;
    gap: 12px;
  }

  .filter-select, .filter-input {
    padding: 8px 12px;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 14px;
    background: white;
    color: #374151;
  }

  .filter-input {
    min-width: 200px;
  }

  @media (max-width: 768px) {
    .stats-grid {
      grid-template-columns: 1fr;
    }

    .table-header {
      flex-direction: column;
      align-items: stretch;
      gap: 12px;
    }

    .table-filters {
      flex-direction: column;
    }
  }
</style>

<script type="module">
  // Filtros en tiempo real
  document.addEventListener('DOMContentLoaded', function() {
    const estadoFilter = document.getElementById('estado-filter');
    const searchInput = document.getElementById('search-input');
    const tableRows = document.querySelectorAll('.data-table tbody tr');

    function filterTable() {
      const estadoValue = estadoFilter.value;
      const searchValue = searchInput.value.toLowerCase();

      tableRows.forEach(row => {
        const estado = row.querySelector('.status-badge').classList.contains('completed');
        const codigo = row.cells[0].textContent.toLowerCase();
        const descripcion = row.cells[1].textContent.toLowerCase();

        const matchesEstado = !estadoValue || 
          (estadoValue === 'true' && estado) || 
          (estadoValue === 'false' && !estado);
        const matchesSearch = !searchValue || 
          codigo.includes(searchValue) || 
          descripcion.includes(searchValue);

        if (matchesEstado && matchesSearch) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    }

    estadoFilter.addEventListener('change', filterTable);
    searchInput.addEventListener('input', filterTable);
  });
</script>