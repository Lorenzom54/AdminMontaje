---
interface Props {
  currentPage: number;
  totalPages: number;
  totalItems: number;
  pageSize: number;
  startItem: number;
  endItem: number;
}

const { currentPage, totalPages, totalItems, pageSize, startItem, endItem } = Astro.props;

// Calcular qué páginas mostrar
function getVisiblePages(current, total) {
  const delta = 2;
  const range = [];
  const rangeWithDots = [];

  for (let i = Math.max(2, current - delta); i <= Math.min(total - 1, current + delta); i++) {
    range.push(i);
  }

  if (current - delta > 2) {
    rangeWithDots.push(1, '...');
  } else {
    rangeWithDots.push(1);
  }

  rangeWithDots.push(...range);

  if (current + delta < total - 1) {
    rangeWithDots.push('...', total);
  } else {
    rangeWithDots.push(total);
  }

  return rangeWithDots.filter((item, index, arr) => arr.indexOf(item) === index && item !== 1 || index === 0);
}

const visiblePages = totalPages > 1 ? getVisiblePages(currentPage, totalPages) : [];
---

<div class="pagination-container">
  <!-- Información de registros -->
  <div class="pagination-info">
    <span class="text-sm text-gray-600">
      Mostrando {startItem} a {endItem} de {totalItems} piezas
    </span>
  </div>

  <!-- Selector de tamaño de página -->
  <div class="page-size-selector">
    <label class="text-sm text-gray-600 mr-2">Mostrar:</label>
    <select id="page-size-select" class="page-size-select">
      <option value="10" selected={pageSize === 10}>10</option>
      <option value="20" selected={pageSize === 20}>20</option>
      <option value="50" selected={pageSize === 50}>50</option>
      <option value="100" selected={pageSize === 100}>100</option>
    </select>
    <span class="text-sm text-gray-600 ml-2">por página</span>
  </div>

  <!-- Navegación de páginas -->
  {totalPages > 1 && (
    <div class="pagination-nav">
      <!-- Botón Anterior -->
      <button 
        class={`pagination-btn ${currentPage === 1 ? 'disabled' : ''}`}
        data-page={currentPage - 1}
        disabled={currentPage === 1}
      >
        <svg width="16" height="16" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        Anterior
      </button>

      <!-- Números de página -->
      <div class="page-numbers">
        {visiblePages.map((page) => (
          page === '...' ? (
            <span class="pagination-dots">...</span>
          ) : (
            <button 
              class={`pagination-number ${currentPage === page ? 'active' : ''}`}
              data-page={page}
            >
              {page}
            </button>
          )
        ))}
      </div>

      <!-- Botón Siguiente -->
      <button 
        class={`pagination-btn ${currentPage === totalPages ? 'disabled' : ''}`}
        data-page={currentPage + 1}
        disabled={currentPage === totalPages}
      >
        Siguiente
        <svg width="16" height="16" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </button>
    </div>
  )}
</div>

<style>
  .pagination-container {
    display: flex;
    flex-direction: column;
    gap: 16px;
    padding: 20px 24px;
    border-top: 1px solid #e5e7eb;
    background: #f9fafb;
  }

  .pagination-info {
    text-align: center;
  }

  .page-size-selector {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }

  .page-size-select {
    padding: 6px 12px;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 14px;
    background: white;
    color: #374151;
    cursor: pointer;
  }

  .page-size-select:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  .pagination-nav {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }

  .pagination-btn {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    border: 1px solid #d1d5db;
    background: white;
    color: #374151;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .pagination-btn:hover:not(.disabled) {
    background: #3b82f6;
    color: white;
    border-color: #3b82f6;
  }

  .pagination-btn.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background: #f3f4f6;
    color: #9ca3af;
  }

  .page-numbers {
    display: flex;
    gap: 4px;
    margin: 0 8px;
  }

  .pagination-number {
    width: 40px;
    height: 40px;
    border: 1px solid #d1d5db;
    background: white;
    color: #374151;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .pagination-number:hover {
    background: #3b82f6;
    color: white;
    border-color: #3b82f6;
  }

  .pagination-number.active {
    background: #3b82f6;
    color: white;
    border-color: #3b82f6;
    font-weight: 600;
  }

  .pagination-dots {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    color: #9ca3af;
    font-weight: 600;
  }

  @media (max-width: 768px) {
    .pagination-container {
      padding: 16px;
    }

    .pagination-nav {
      flex-wrap: wrap;
      gap: 4px;
    }

    .pagination-btn {
      padding: 6px 12px;
      font-size: 12px;
    }

    .pagination-number {
      width: 36px;
      height: 36px;
      font-size: 12px;
    }

    .page-numbers {
      margin: 0 4px;
    }
  }
</style>